# Q3 AUTOMATED SOFTWARE TESTING SIMULATION


def square(x):
    """Returns the square of a number"""
    if isinstance(x, (int, float)):  
        return x * x
    else:
        return "Invalid Input"

def get_test_cases():
    return [
        {"input": 2, "expected": 4},
        {"input": -3, "expected": 9},
        {"input": 0, "expected": 0},
        {"input": 5, "expected": 25},
        {"input": 10, "expected": 100},
        {"input": -1, "expected": 1},
        {"input": 3.5, "expected": 12.25},  
        {"input": "text", "expected": "Invalid Input"}  
    ]

def run_tests():
    print("Running Automated Tests...\n")
    test_cases = get_test_cases()
    passed = 0  

    for index, test in enumerate(test_cases):
        input_value = test["input"]
        expected_output = test["expected"]
        actual_output = square(input_value)

        result = "PASS" if actual_output == expected_output else "FAIL"
        if result == "PASS":
            passed += 1

        print(f"Test Case {index + 1}: Input={input_value} | Expected={expected_output} | Actual={actual_output} --> {result}")

    total = len(test_cases)
    print(f"\nTesting Completed: {passed}/{total} Tests Passed.")

if __name__ == "__main__":
    run_tests()


Output:
Running Automated Tests...

Test Case 1: Input=2 | Expected=4 | Actual=4 --> PASS
Test Case 2: Input=-3 | Expected=9 | Actual=9 --> PASS
Test Case 3: Input=0 | Expected=0 | Actual=0 --> PASS
Test Case 4: Input=5 | Expected=25 | Actual=25 --> PASS
Test Case 5: Input=10 | Expected=100 | Actual=100 --> PASS
Test Case 6: Input=-1 | Expected=1 | Actual=1 --> PASS
Test Case 7: Input=3.5 | Expected=12.25 | Actual=12.25 --> PASS
Test Case 8: Input=text | Expected=Invalid Input | Actual=Invalid Input --> PASS

Testing Completed: 8/8 Tests Passed.
